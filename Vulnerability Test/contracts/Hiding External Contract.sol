// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

/// @title Foo
/// @notice A contract that interacts with the Bar contract by calling its log function.
contract Foo {
    Bar public bar;

    /// @notice Constructs the Foo contract, specifying the address of the Bar contract to interact with.
    /// @param _bar The address of the Bar contract.
    constructor(address _bar) {
        bar = Bar(_bar);
    }

    /// @notice Calls the log function of the Bar contract.
    /// @return The result of the log function call, which is a string.
    function callBar() view public returns (string memory){
        return bar.log();
    }
}

/// @title Bar
/// @notice A contract that returns a fixed string message when its log function is called.
contract Bar {
    /// @notice Returns a fixed string message.
    /// @return The string message "Bar was called".
    function log() public pure returns (string memory){
        return "Bar was called";
    }
}

/// @title Mal
/// @notice A contract that returns a fixed string message when its log function is called.
contract Mal {
    /// @notice Returns a fixed string message.
    /// @return The string message "Mal was called".
    function log() public pure returns (string memory) {
        return "Mal was called";
    }
}
