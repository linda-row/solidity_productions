// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

/// @title FrontRunning
/// @notice A contract that allows solving a puzzle by providing the correct solution and rewards the solver with Ether.
contract FrontRunning {
    bytes32 public constant hash = 0x564ccaf7594d66b1eaaea24fe01f0585bf52ee70852af4eac0cc4b04711cd0e2;

    /// @notice Constructs the FrontRunning contract.
    constructor() payable {}

    /// @notice Solves the puzzle by providing the correct solution and rewards the solver with 10 Ether.
    /// @param solution The string representation of the solution.
    function solve(string memory solution) public {
        require(hash == keccak256(abi.encodePacked(solution)), "Incorrect answer");

        // Sends 10 Ether to the solver.
        (bool sent, ) = msg.sender.call{value: 10 ether}("");
        require(sent, "Failed to send Ether");
    }
}
